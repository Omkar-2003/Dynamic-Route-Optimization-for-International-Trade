{
  "openapi": "3.1.0",
  "info": {
    "version": "2.10.0",
    "title": "Plan",
    "description": "# Introduction\nThe Searoutes web services APIs allow you to programmatically access tools and services from the Searoutes ecosystem. You can use these APIs to retrieve informations about vessel positions, vessel routes, GHG emissions, weather and other core data points. Searoutes services are divided in five categories:\n\n- Our [CO2 service](#tag/co2) provides CO2e emissions (i.e CO2 equivalent emissions) statistics of a given carrier for a given port pair.\n\n- Our [Itinerary service](#tag/itinerary) searches itineraries operated for freight transport.\n\n- Our [Route service](#tag/route) allows you to plan voyages of vessels, get distances and travel times between ports or points, on land or sea.\n\n- Our [Vessel service](#tag/vessel) gives you up to date positions of vessels and estimated travel times to their next destination.\n\n- Our [Weather service](#tag/weather) lets you explore weather data points in the past or the future, at a location or on a route.\n\nNote that this is the documentation page for most recent stable version of Searoutes API. For the previous stable versions, [visit this documentation page](http://developer.searoutes.com/api/v1). \n\nIf you have a `valid API key`, you may try the API by copying the code samples in your shell, your favorite editor, or API development platform. Please be aware that some endpoints may not work with your API key depending on your service plan. If you would like a trial key or you want to add additional endpoints to your plan, please [get in touch with us](https://searoutes.typeform.com/to/ZRAoy5).\n",
    "termsOfService": "https://searoutes.com/terms-of-service/",
    "contact": {
      "email": "support@searoutes.com",
      "url": "https://searoutes.com"
    },
    "x-logo": {
      "url": "/img/Logo-searoutes-01.svg",
      "altText": "Searoutes logo"
    }
  },
  "tags": [
    {
      "name": "co2",
      "description": "CO2 API allows to calculate CO2e emissions from real routes and vessel characteristics on direct routes."
    },
    {
      "name": "itinerary",
      "description": "Itinerary API allows to search for itineraries based on the services operated by carriers."
    },
    {
      "name": "route",
      "description": "Our routes are computed based on historical voyages of vessels, which we gather from both satellite and terrestrial data."
    },
    {
      "name": "vessel",
      "description": "Vessel API"
    },
    {
      "name": "weather",
      "description": "All things weather - tides, ocean currents, winds and waves - these data are available in statistical and historical form, or in prediction."
    }
  ],
  "servers": [
    {
      "url": "https://api.searoutes.com"
    }
  ],
  "paths": {
    "/co2/v2/plan": {
      "get": {
        "operationId": "getCO2Tender",
        "tags": [
          "co2"
        ],
        "summary": "Get CO2 statistics for a given carrier on a given port pair.",
        "description": "This endpoint returns CO2e emissions (i.e CO2 equivalent emissions) statistics of a given carrier for a given port pair. The CO2e emissions are returned in grams per TEU.\n\nThe carrier can be given by SCAC or id.\n\nWe calculate the itineraries operated by the carrier based on their services (and the services of their alliance) and for each itinerary, we calculate the CO2e emissions of each vessel operating the service and return statistics.\n\nThe response contains CO2e WTW (well-to-wheels) emissions statistics with minimum value (i.e value of the greenest itinerary on average), maximum value (i.e value of the most emitting itinerary on average), average value of all the itineraries and standard deviations.\nWe also provide detailed emissions with TTW (tank-to-wheels) emissions and WTT (well-to-tank) emissions. The method takes into account the emissions caused by the fuel consumption of the main engines, the auxiliary engines and the boilers.\nThe response also returns the intensity factor (kg of CO2 per ton.kilometer) which is calculated based on the CO2e WTW, distance and the weight provided. If no weight has been provided, we estimate the weight based on the number of containers and their type (`weight` in `properties`)\n\nThe `parameters` field in the response contains all the parameters that were given in the request.\n\nThe `properties` field in the response gives the details of the CO2 statistics of each itinerary. The statistics of an itinerary are calculated on the vessels so the minimum value is the CO2 emissions of the greenest vessel on the service, etc. In case of an itinerary with transhipments, the minimum value is the sum of the minimum values of each leg of the itinerary. \n\nEach itinerary is associated to a unique fingerprint (called \"hash\") that you can use to retrieve the details of the itinerary via the [/itinerary/v2/hash](#operation/getItineraryByHash) endpoint.\n\nNote that the distances we use to calculate CO2 values take into account all the stops in other ports the vessel does on the itinerary based on the service it operates.\n\nThe itineraries are calculated on up to date carriers services data. In case of a route with transhipments, note that the transhipment ports may not be the one actually operated.\n\nThe method used to calculate emissions is the one available in our [co2/v2/direct/sea](#operation/getCO2ForVessel) endpoint and is based on the following references : \n- Third IMO Greenhouse Gas Study 2014;\n- Fourth IMO Greenhouse Gas Study 2020;\n- EMEP/EEA air pollutant emission inventory guidebook 2019;\n- GLEC Framework 2020.\n",
        "parameters": [
          {
            "name": "fromLocode",
            "description": "The UNLOCODE of the departure port.",
            "in": "query",
            "required": true,
            "schema": {
              "default": "FRMRS",
              "example": "FRMRS",
              "type": "string"
            }
          },
          {
            "name": "toLocode",
            "description": "The UNLOCODE of the arrival port.",
            "in": "query",
            "required": true,
            "schema": {
              "default": "HKHKG",
              "example": "HKHKG",
              "type": "string"
            }
          },
          {
            "name": "carrierScac",
            "description": "The Standard Carrier Alpha Code (SCAC) of the carrier. Note that you must provide either a SCAC or a carrier id.",
            "in": "query",
            "required": false,
            "schema": {
              "example": "CMDU",
              "type": "string"
            }
          },
          {
            "name": "carrierId",
            "description": "The id of the carrier (can be found via the search endpoints). Note that you must provide either a SCAC or a carrier id.",
            "in": "query",
            "required": false,
            "schema": {
              "default": 21,
              "example": 21,
              "type": "number"
            }
          },
          {
            "name": "nContainers",
            "description": "The number of shipped containers.",
            "in": "query",
            "required": false,
            "schema": {
              "default": 1,
              "example": 2.5,
              "type": "number"
            }
          },
          {
            "name": "containerSizeTypeCode",
            "description": "Code to identify the size and the type of the container. 20GP, 22G1, 2200, 22G0, 2202, 2210, 40GP, 42G1, 42G0, 40G1, 40HC, 45G1, 4500, 45G0, 22R1, 2231, 42R1, 4531, 40NOR, 45R1, 45R8, 40REHC, 53GP.",
            "in": "query",
            "required": false,
            "schema": {
              "example": "20GP",
              "type": "string"
            }
          },
          {
            "name": "weight",
            "description": "The weight of shipped goods in kilograms in case the number of containers is unknown.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 8000,
              "type": "number"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\nhttps://api.searoutes.com/co2/v2/plan?fromLocode=BEANR&toLocode=CNSHA&carrierId=21 \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "co2e": {
                    "min": 753628,
                    "max": 993815,
                    "average": 873721,
                    "standardDeviation": 120093,
                    "wtt": {
                      "min": 61187,
                      "max": 80349,
                      "average": 70768
                    },
                    "ttw": {
                      "min": 692439,
                      "max": 913466,
                      "average": 802952
                    },
                    "intensity": {
                      "min": 0.0038,
                      "max": 0.0046,
                      "average": 0.0042,
                      "standardDeviation": 0.00042
                    }
                  },
                  "parameters": {
                    "mode": "SEA",
                    "carrierId": 21,
                    "from": {
                      "locode": "BEANR"
                    },
                    "to": {
                      "locode": "CNSHA"
                    },
                    "containerSizeTypeCode": null,
                    "weight": null,
                    "nContainers": null
                  },
                  "properties": {
                    "weight": 10000,
                    "nTEU": 1,
                    "containerSizeTypeCode": "20GP",
                    "itineraries": [
                      {
                        "hash": "Ela_kbYVccv69lzdVROOj1pinC-WSPR8kDx_jhW-9fA=",
                        "co2e": {
                          "min": 662033,
                          "max": 1083772,
                          "average": 753628,
                          "standardDeviation": 113241,
                          "wtt": {
                            "min": 53751,
                            "max": 87993,
                            "average": 61187
                          },
                          "ttw": {
                            "min": 608282,
                            "max": 995779,
                            "average": 692439
                          },
                          "intensity": {
                            "min": 0.0033,
                            "max": 0.0054,
                            "average": 0.0038,
                            "standardDeviation": 0.00057
                          }
                        },
                        "distance": 19910628
                      },
                      {
                        "hash": "enDK2DI5NnGgnYWSMNnWEVpinC-WSPR8kDx_jhW-9fA=",
                        "co2e": {
                          "min": 865136,
                          "max": 1120821,
                          "average": 993815,
                          "standardDeviation": 98282,
                          "wtt": {
                            "min": 69945,
                            "max": 90618,
                            "average": 80349
                          },
                          "ttw": {
                            "min": 795191,
                            "max": 1030203,
                            "average": 913466
                          },
                          "intensity": {
                            "min": 0.004,
                            "max": 0.0052,
                            "average": 0.0046,
                            "standardDeviation": 0.00046
                          }
                        },
                        "distance": 21485525
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1633598739776,
                  "status": 400,
                  "error": "Bad Request",
                  "errorCodes": [
                    "3110"
                  ],
                  "messages": [
                    "Departure and arrival ports must be given as UNLOCODE"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1633598770079,
                  "status": 404,
                  "error": "Not Found",
                  "errorCodes": [
                    "1040"
                  ],
                  "messages": [
                    "Location with locode 'AAAAA' not found."
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/itinerary/v2/hash/{hash}": {
      "get": {
        "operationId": "getItineraryByHash",
        "tags": [
          "itinerary"
        ],
        "summary": "Get itinerary by hash.",
        "description": "This endpoint returns the details about an itinerary by hash (the unique fingerprint used to identify them). Itinerary hashes are returned in [/co2/v2/plan](#operation/getCO2Tender) for example.\n\nThe response is a feature collection where each feature corresponds to a leg of the itinerary. Each feature has its own properties such as the distance, the duration, the day of departure and arrival, the service id, etc. The feature collection properties are those of the entire itinerary : duration (including transhipments, wait in ports), ids of the carriers that can operate the itinerary, etc.\n\nThe distances are given in meters and the CO2e emissions in grams per TEU.\n",
        "parameters": [
          {
            "name": "hash",
            "description": "The hash of the itinerary to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "default": "Ela_kbYVccv69lzdVROOj1pinC-WSPR8kDx_jhW-9fA=",
              "example": "Ela_kbYVccv69lzdVROOj1pinC-WSPR8kDx_jhW-9fA=",
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\nhttps://api.searoutes.com/itinerary/v2/hash/ \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "type": "Feature",
                      "properties": {
                        "duration": {
                          "days": 27
                        },
                        "departure": {
                          "dayNumber": 1,
                          "dayOfTheWeek": 4
                        },
                        "arrival": {
                          "dayNumber": 28,
                          "dayOfTheWeek": 3
                        },
                        "co2": 922863,
                        "distance": 19953497,
                        "from": {
                          "locode": "BEANR",
                          "name": "Antwerpen"
                        },
                        "to": {
                          "locode": "CNSHA",
                          "name": "Shanghai Hongqiao International Apt"
                        },
                        "mode": "SEA",
                        "serviceId": 2820
                      },
                      "geometry": {
                        "type": "LineString",
                        "coordinates": []
                      }
                    }
                  ],
                  "properties": {
                    "duration": {
                      "days": 27
                    },
                    "departure": {
                      "dayNumber": 1,
                      "dayOfTheWeek": 4
                    },
                    "arrival": {
                      "dayNumber": 28,
                      "dayOfTheWeek": 3
                    },
                    "co2": 922863,
                    "distance": 19953497,
                    "from": {
                      "locode": "BEANR",
                      "name": "Antwerpen"
                    },
                    "to": {
                      "locode": "CNSHA",
                      "name": "Shanghai Hongqiao International Apt"
                    },
                    "carrierIds": [
                      81,
                      4,
                      21,
                      360,
                      25,
                      41
                    ],
                    "hash": "Ela_kbYVccv69lzdVROOj1pinC-WSPR8kDx_jhW-9fA="
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1633601255133,
                  "status": 400,
                  "error": "Bad Request",
                  "errorCodes": [
                    "3240"
                  ],
                  "messages": [
                    "'hash_test' is not a valid itinerary hash."
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/route/v2/sea/{coordinates}": {
      "get": {
        "operationId": "getSeaRoute",
        "tags": [
          "route"
        ],
        "summary": "Get sea route between coordinates.",
        "description": "This endpoints returns the route between a source location and a target location on sea, along with the route distance (in meters), duration (in milliseconds) and the crossed areas. We return the shortest route sailed considering traffic separation schemes and port entries. \n\n### Origin, destination and intermediary points\n\nCoordinate pairs are used for positions. They are specified as `longitude,latitude`, and listed with separating `;`. You can specify intermediary points on a route, or request several legs of a trip in one go, by listing more than two coordinate pairs. For instance: `-1.26617431640625,50.79551936692376;8.8330078125,53.88491634606499;-3.2409667968749996,53.50111704294316`.\n\n### Vessel specific routes\n\nYou can get vessel specific routes by specifying the IMO number of a vessel. The returned route will be compatible with the vessel dimensions (width (in m), length (in m), maximum draft (in m)). If the IMO is not given, We choose a small vessel in order not to block any route. \nYou can also specify the current draft (in m) of the vessel using the parameter `vesselDraft`, with or without giving an IMO. If both IMO and vessel draft are given, the given draft (in m) is used and the other dimensions (width, length) are retrieved from the IMO number.\nThe response contains static information about the vessel used (width (in m), length (in m), maximum draft (in m)).\n\n### Continuous coordinates\n\nDepending on the boolean parameter `continuousCoordinates`, the longitudes of the points of the route returned can be between -180° and 180° (`false`) or continuous (ie greater than 180° or lower than -180° after crossing the antimeridian). \nThe default behavior is to return continuous coordinates (the parameter is set to `true` as default). However, we encourage the use of normalized longitudes between -180° and 180° setting the parameter to `true` when requesting a route.\n\n### Routing parameters\n\nDeparture time (Unix time in ms) and speed can be specified in order to get an accurate ETA. The speed can be given in knots using the parameter `speedInKts` or in km/h using the parameter `speed`. The ETA (Unix time in ms) and duration (in ms) take into account the maximum authorized speed in specific areas such as canals. If the vessel speed is superior to the authorized speed of a crossed area, we assume the vessel will sail at maximum authorized speed in the area and at the given vessel speed outside the area.\n\n#### Avoid zones\n\nECA zones can be avoided by using the parameter `avoidSeca`. In that case, the distance travelled in the ECA zone is minimized.\nThe HRA (high risk area) zone can be avoided using parameter `avoidHRA`. If no points from the query are in the HRA zones, the zone will be totally avoided, if at least one point is in the HRA zone, the route will go through it but minimize the distance navigated in it.  The distance in HRA is available in the response in the field `hraIntersection`.\n\n#### Ice areas and block areas\n\nBy default, the seas that are difficult to sail due to the presence of ice are not allowed (for example the Bering Sea, the Northern Sea Route, etc). You can allow the route to go through these zones by using the `allowIceAreas` parameter.\nIt is possible to block some areas by using the parameter `blockAreas` which takes a list of ids (Panama Canal : 11112 , Suez Canal : 11117). In that case, the route won't cross the areas blocked.\n\nNote that all rivers are available on this endpoint using appropriate vessel draft (in m).\n",
        "parameters": [
          {
            "name": "continuousCoordinates",
            "description": "Allows to return either continuous longitudes when crossing the antimeridian (`true`) or longitudes always between -180° and 180° (`false`)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "allowIceAreas",
            "description": "Specifies if sailing in ice areas (Northern Sea route, deep South Pacific, deep South Atlantic, Bering Sea, etc) is possible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "avoidHRA",
            "description": "Specifies if travel in HRA zone should be avoided",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "avoidSeca",
            "description": "Specifies if travel in SECA zones should be avoided",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "blockAreas",
            "description": "Specifies a particular area to block, or a list of areas to block (separated by `,`). Area Ids can be found using the [/geocoding/area/{name}](#operation/getGeocodingArea) endpoint.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 11112,
              "type": "integer"
            }
          },
          {
            "name": "coordinates",
            "description": "A list of `longitude,latitude` pairs, separated by `;`. Longitude should be between -180 and 180 degrees, and latitude between -90 and 90 degrees.",
            "in": "path",
            "required": true,
            "allowReserved": true,
            "schema": {
              "default": "9.965629577636719,53.53296196255539;0.45069694519042963,51.503039451809734",
              "example": "9.965629577636719,53.53296196255539;0.45069694519042963,51.503039451809734",
              "type": "string"
            }
          },
          {
            "name": "departure",
            "description": "Specifies departure time in unix time (in ms).",
            "in": "query",
            "required": false,
            "schema": {
              "example": 1570095939000,
              "type": "integer"
            }
          },
          {
            "name": "imo",
            "description": "The IMO number of the vessel.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 9776418,
              "type": "integer"
            }
          },
          {
            "name": "speed",
            "description": "The speed of the vessel in km/h.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 42,
              "type": "number"
            }
          },
          {
            "name": "speedInKts",
            "description": "The speed of the vessel in knots.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 23.5,
              "type": "number"
            }
          },
          {
            "name": "vesselDraft",
            "description": "The draft of the vessel in meters.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 17,
              "type": "number"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\n'https://api.searoutes.com/route/v2/sea/9.965629577636719,53.53296196255539;0.45069694519042963,51.503039451809734' \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                  },
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Feature",
                        "FeatureCollection",
                        "Point",
                        "MultiPoint",
                        "LineString",
                        "MultiLineString",
                        "Polygon",
                        "MultiPolygon",
                        "GeometryCollection"
                      ]
                    },
                    "bbox": {
                      "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "example": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "type": "Feature",
                      "properties": {
                        "departure": 1593007160607,
                        "arrival": 1593084431607,
                        "duration": 77271000,
                        "speed": 42,
                        "distance": 901494,
                        "secaIntersection": 901494,
                        "hraIntersection": 0,
                        "intersectsIceArea": false,
                        "speedInKts": 22.68,
                        "mode": "sea",
                        "vessel": {
                          "imo": 9312195,
                          "name": "ENDEAVOR",
                          "length": 134,
                          "width": 21,
                          "maxDraft": 7.5,
                          "draft": 7.1
                        },
                        "details": [],
                        "areas": {
                          "type": "FeatureCollection",
                          "features": [
                            {
                              "type": "Feature",
                              "properties": {
                                "id": 10810,
                                "name": "SECA Europe",
                                "alternatives": []
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  3.3955,
                                  56.2781
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "geometry": {
                        "type": "LineString",
                        "coordinates": [
                          [
                            9.965629577636719,
                            53.53296196255539
                          ],
                          [
                            9.965672580618872,
                            53.53293709522376
                          ],
                          [
                            9.965758586583178,
                            53.532887360560494
                          ],
                          [
                            9.96580158956533,
                            53.53286249322886
                          ],
                          [
                            9.952021538418792,
                            53.537332012830255
                          ],
                          [
                            9.94664244983364,
                            53.54248021015489
                          ],
                          [
                            9.92740156707279,
                            53.541558018788805
                          ],
                          [
                            9.899944968893692,
                            53.54189687915343
                          ],
                          [
                            9.870087929880809,
                            53.5446781684259
                          ],
                          [
                            9.793746802417843,
                            53.55512040937518
                          ],
                          [
                            9.66914366040914,
                            53.56688042398741
                          ],
                          [
                            9.646204178073045,
                            53.57640494716307
                          ],
                          [
                            9.5792,
                            53.6047
                          ],
                          [
                            9.551470299156298,
                            53.61512888837808
                          ],
                          [
                            9.516018127427433,
                            53.64945880998556
                          ],
                          [
                            9.502268837152112,
                            53.696084636688575
                          ],
                          [
                            9.404,
                            53.7539
                          ],
                          [
                            9.371273882258691,
                            53.81248403693656
                          ],
                          [
                            9.2921,
                            53.8637
                          ],
                          [
                            9.139630206013736,
                            53.878614336356065
                          ],
                          [
                            9.113484144015016,
                            53.87976724217441
                          ],
                          [
                            8.8992,
                            53.8428
                          ],
                          [
                            8.791122648053745,
                            53.84393933172554
                          ],
                          [
                            8.717406636469164,
                            53.87982626157275
                          ],
                          [
                            8.600367389627914,
                            53.96224297499376
                          ],
                          [
                            8.43583269938233,
                            53.98524938977922
                          ],
                          [
                            8.398240306864073,
                            53.99110840005127
                          ],
                          [
                            8.25545397207577,
                            54.02624506338298
                          ],
                          [
                            8.082133514830266,
                            54.01959127969709
                          ],
                          [
                            7.967262779329695,
                            54.06239554786311
                          ],
                          [
                            7.4860839697257955,
                            54.20193926383708
                          ],
                          [
                            7.411011789527785,
                            54.205532604170116
                          ],
                          [
                            7.14639676176231,
                            54.20796167273774
                          ],
                          [
                            6.851041196845467,
                            54.19798116831027
                          ],
                          [
                            6.470577497552377,
                            54.1899481908586
                          ],
                          [
                            6.313658002650975,
                            54.19004240191692
                          ],
                          [
                            5.9857311502137325,
                            54.160053283248445
                          ],
                          [
                            5.644499307961276,
                            54.13629309547248
                          ],
                          [
                            5.261,
                            54.10736841795313
                          ],
                          [
                            5.137299581746455,
                            54.09442806293325
                          ],
                          [
                            4.97473240347018,
                            54.082127887512044
                          ],
                          [
                            4.949306025451818,
                            54.021485756049145
                          ],
                          [
                            4.810401168369447,
                            53.824136334874346
                          ],
                          [
                            4.645994127287735,
                            53.59533459031698
                          ],
                          [
                            4.6132,
                            53.5309
                          ],
                          [
                            4.5952,
                            53.5079
                          ],
                          [
                            4.5778428384196195,
                            53.468567296109505
                          ],
                          [
                            4.4903,
                            53.2914
                          ],
                          [
                            4.389631908616309,
                            53.164996733659564
                          ],
                          [
                            4.1948,
                            53.0644
                          ],
                          [
                            4.154515365780758,
                            53.0441756934827
                          ],
                          [
                            4.0069473101258115,
                            52.96643871629764
                          ],
                          [
                            3.931807705428554,
                            52.93173263968305
                          ],
                          [
                            3.7625264047738316,
                            52.80484567129635
                          ],
                          [
                            3.6282043158329995,
                            52.7106150223054
                          ],
                          [
                            3.498922635098507,
                            52.61076519799626
                          ],
                          [
                            3.3847745894362316,
                            52.5272634018697
                          ],
                          [
                            3.205996789505234,
                            52.3818061677076
                          ],
                          [
                            3.1379697325381057,
                            52.316973028642764
                          ],
                          [
                            3.104263843908313,
                            52.28593482452747
                          ],
                          [
                            3.0293,
                            52.2165
                          ],
                          [
                            2.9766,
                            52.1853
                          ],
                          [
                            2.7815816535005555,
                            52.044742607567656
                          ],
                          [
                            2.557318243628919,
                            51.851302652031364
                          ],
                          [
                            1.925762898685548,
                            51.64188126381316
                          ],
                          [
                            1.796043509320186,
                            51.61217632998487
                          ],
                          [
                            1.759335344065036,
                            51.59661040181004
                          ],
                          [
                            1.7416103833509728,
                            51.59348590930524
                          ],
                          [
                            1.7236221925747803,
                            51.58769679145536
                          ],
                          [
                            1.368200672315395,
                            51.4732749791367
                          ],
                          [
                            1.3068956405872023,
                            51.48335107804678
                          ],
                          [
                            1.049071649625051,
                            51.48995577628866
                          ],
                          [
                            0.9138,
                            51.4804
                          ],
                          [
                            0.8403,
                            51.4877
                          ],
                          [
                            0.7656200052013021,
                            51.48860643052404
                          ],
                          [
                            0.7071,
                            51.4923
                          ],
                          [
                            0.6525430866058811,
                            51.50530481131392
                          ],
                          [
                            0.5545692388319577,
                            51.50345096620628
                          ],
                          [
                            0.5036,
                            51.5041
                          ],
                          [
                            0.4898,
                            51.5025
                          ],
                          [
                            0.46590445452480367,
                            51.492312079880094
                          ],
                          [
                            0.45069694519042963,
                            51.503039451809734
                          ]
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625224359918,
                  "status": 400,
                  "error": "Bad Request",
                  "errorCodes": [
                    "3190"
                  ],
                  "messages": [
                    "Coordinates must be given in longitude,latitude format and separated by ';'"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625224236593,
                  "status": 404,
                  "error": "Not Found",
                  "errorCodes": [
                    "1020"
                  ],
                  "messages": [
                    "We could not find a route between -118.564453125,33.7243396617476 and 6.5087890625,30.56226095049944 using sea with a 4.2m draft vessel with parameter allowIceAreas set to false."
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/route/v2/sea/{coordinates}/plan": {
      "get": {
        "operationId": "getPlanSeaRoute",
        "tags": [
          "route"
        ],
        "summary": "Get a detailed plan for sea route between coordinates.",
        "description": "This endpoints returns the route between a source location and a target location on sea, along with the route distance (in meters), duration (in milliseconds) and details about the zones it goes through. We return the shortest route sailed considering traffic separation schemes and port entries. \n\n### Origin, destination and intermediary points\n\nCoordinate pairs are used for positions. They are specified as `longitude,latitude`, and listed with separating `;`. You can specify intermediary points on a route, or request several legs of a trip in one go, by listing more than two coordinate pairs. For instance: `-1.26617431640625,50.79551936692376;8.8330078125,53.88491634606499;-3.2409667968749996,53.50111704294316`.\n\n### Vessel specific routes\n\nYou can get vessel specific routes by specifying the IMO number of a vessel. The returned route will be compatible with the vessel dimensions (width (in m), length (in m), maximum draft (in m)). If the IMO is not given, We choose a small vessel in order not to block any route. \nYou can also specify the current draft (in m) of the vessel using the parameter `vesselDraft`, with or without giving an IMO. If both IMO and vessel draft are given, the given draft (in m) is used and the other dimensions (width, length) are retrieved from the IMO number.\nThe response contains static information about the vessel used (width (in m), length (in m), maximum draft (in m)).\n\n### Continuous coordinates\n\nDepending on the boolean parameter `continuousCoordinates`, the longitudes of the points of the route returned can be between -180° and 180° (`false`) or continuous (ie greater than 180° or lower than -180° after crossing the antimeridian). \nThe default behavior is to return continuous coordinates (the parameter is set to `true` as default). However, we encourage the use of normalized longitudes between -180° and 180° setting the parameter to `true` when requesting a route.\n\n### Routing parameters\n\nDeparture time (Unix time in ms) and speed can be specified in order to get an accurate ETA. The speed can be given in knots using the parameter `speedInKts` or in km/h using the parameter `speed`. The ETA (Unix time in ms) and duration (in ms) take into account the maximum authorized speed in specific areas such as canals. If the vessel speed is superior to the authorized speed of a crossed area, we assume the vessel will sail at maximum authorized speed in the area and at the given vessel speed outside the area.\n\n#### Avoid zones\n\nECA zones can be avoided by using the parameter `avoidSeca`. In that case, the distance travelled in the ECA zone is minimized.\nThe HRA (high risk area) zone can be avoided using parameter `avoidHRA`. If no points from the query are in the HRA zones, the zone will be totally avoided, if at least one point is in the HRA zone, the route will go through it but minimize the distance navigated in it.  The distance in HRA is available in the response in the field `hraIntersection`.\n\n#### Ice areas and block areas\n\nBy default, the seas that are difficult to sail due to the presence of ice are not allowed (for example the Bering Sea, the Northern Sea Route, etc). You can allow the route to go through these zones by using the `allowIceAreas` parameter.\nIt is possible to block some areas by using the parameter `blockAreas` which takes a list of ids (Panama Canal : 11112 , Suez Canal : 11117). In that case, the route won't cross the areas blocked.\n\nNote that all rivers are available on this endpoint using appropriate vessel draft (in m).\n\n### Waypoints returned\n\nThis endpoint additionally returns a list of waypoints of interest in the `waypoints` fields of the `properties` of each leg. The waypoints can be of different types : \n- `VOYAGE` for voyage scale events such as departure and arrival with class either `ENTRY` or `EXIT`;\n- `ROUTING` for special zones with class either `ENTRY` or `EXIT`;\n- `SECA` for ECA zones with class either `ENTRY` or `EXIT`;\n- `SPEED` for points where speed must be adjusted with class `INCREASE`, `DECREASE` or `TARGET` (only used to know the speed at departure when it must be different than the given speed).\n",
        "parameters": [
          {
            "name": "continuousCoordinates",
            "description": "Allows to return either continuous longitudes when crossing the antimeridian (`true`) or longitudes always between -180° and 180° (`false`)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "allowIceAreas",
            "description": "Specifies if sailing in ice areas (Northern Sea route, deep South Pacific, deep South Atlantic, Bering Sea, etc) is possible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "avoidHRA",
            "description": "Specifies if travel in HRA zone should be avoided",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "avoidSeca",
            "description": "Specifies if travel in SECA zones should be avoided",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "blockAreas",
            "description": "Specifies a particular area to block, or a list of areas to block (separated by `,`). Area Ids can be found using the [/geocoding/area/{name}](#operation/getGeocodingArea) endpoint.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 11112,
              "type": "integer"
            }
          },
          {
            "name": "coordinates",
            "description": "A list of `longitude,latitude` pairs, separated by `;`. Longitude should be between -180 and 180 degrees, and latitude between -90 and 90 degrees.",
            "in": "path",
            "required": true,
            "schema": {
              "default": "9.965629577636719,53.53296196255539;0.45069694519042963,51.503039451809734",
              "example": "9.965629577636719,53.53296196255539;0.45069694519042963,51.503039451809734",
              "type": "string"
            }
          },
          {
            "name": "departure",
            "description": "Specifies departure time in unix time in ms.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 1570095939000,
              "type": "integer"
            }
          },
          {
            "name": "imo",
            "description": "The IMO number of the vessel.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 9776418,
              "type": "integer"
            }
          },
          {
            "name": "speed",
            "description": "The speed of the vessel in km/h.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 42,
              "type": "number"
            }
          },
          {
            "name": "speedInKts",
            "description": "The speed of the vessel in knots.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 23.5,
              "type": "number"
            }
          },
          {
            "name": "vesselDraft",
            "description": "The draft of the vessel in meters.",
            "in": "query",
            "required": false,
            "schema": {
              "example": 17,
              "type": "number"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\n'https://api.searoutes.com/route/v2/sea/20.456542968749996,35.44277092585766;30.102539062499996,42.21224516288584/plan' \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                  },
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Feature",
                        "FeatureCollection",
                        "Point",
                        "MultiPoint",
                        "LineString",
                        "MultiLineString",
                        "Polygon",
                        "MultiPolygon",
                        "GeometryCollection"
                      ]
                    },
                    "bbox": {
                      "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "example": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "type": "Feature",
                      "properties": {
                        "distance": 1255712,
                        "mode": "sea",
                        "departure": 1601046723023,
                        "arrival": 1601270325023,
                        "duration": 223602000,
                        "speed": 20.217,
                        "areas": {
                          "type": "FeatureCollection",
                          "features": [
                            {
                              "type": "Feature",
                              "properties": {
                                "id": 11128,
                                "name": "Bosporus",
                                "alternatives": []
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  29.06657492996061,
                                  41.14204073994273
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "id": 11129,
                                "name": "Dardanelles Strait",
                                "alternatives": []
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  26.514141824032237,
                                  40.24338247717702
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "id": 11118,
                                "name": "Elafonisou Strait",
                                "alternatives": []
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  23.002863506753243,
                                  36.37679624749667
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "id": 11124,
                                "name": "West Khios",
                                "alternatives": []
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  25.327710916992686,
                                  38.53500039849351
                                ]
                              }
                            }
                          ],
                          "properties": null
                        },
                        "details": [],
                        "secaIntersection": 0,
                        "hraIntersection": 0,
                        "intersectsIceArea": false,
                        "speedInKts": 10.916,
                        "vessel": {
                          "imo": 8677225,
                          "name": "KSL PRIDE",
                          "length": 83,
                          "width": 15,
                          "maxDraft": 4.2,
                          "draft": 4.2
                        },
                        "waypoints": {
                          "type": "FeatureCollection",
                          "features": [
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601046723023,
                                "value": "",
                                "distance": 0,
                                "type": "VOYAGE",
                                "class": "ENTRY"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  20.456542968749996,
                                  35.44277092585766
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601094715483,
                                "value": "Elafonisou Strait",
                                "distance": 271584,
                                "type": "ROUTING",
                                "class": "ENTRY"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  22.9230188409349,
                                  36.3992923349164
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601097593786,
                                "value": "Elafonisou Strait",
                                "distance": 287872,
                                "type": "ROUTING",
                                "class": "EXIT"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  23.1041204412648,
                                  36.3913032522445
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601151746996,
                                "value": "West Khios",
                                "distance": 594319,
                                "type": "ROUTING",
                                "class": "ENTRY"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  24.9029794246363,
                                  38.3959734940866
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601155930149,
                                "value": "West Khios",
                                "distance": 617991,
                                "type": "ROUTING",
                                "class": "EXIT"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  25.0316357418887,
                                  38.583733804602
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601189790152,
                                "value": "Dardanelles Strait",
                                "distance": 809601,
                                "type": "ROUTING",
                                "class": "ENTRY"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  26.1777845307325,
                                  40.0216657772824
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601189946366,
                                "value": "10",
                                "distance": 810485,
                                "type": "SPEED",
                                "class": "DECREASE"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  26.1881482325571,
                                  40.0216173312243
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601202987229,
                                "value": "11.0",
                                "distance": 877573,
                                "type": "SPEED",
                                "class": "INCREASE"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  26.731158612656,
                                  40.4105848417196
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601204100698,
                                "value": "Dardanelles Strait",
                                "distance": 883874,
                                "type": "ROUTING",
                                "class": "EXIT"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  26.7909450228584,
                                  40.4437183977158
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601240266808,
                                "value": "10",
                                "distance": 1088534,
                                "type": "SPEED",
                                "class": "DECREASE"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  28.9976937465172,
                                  41.0160683704915
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601241181192,
                                "value": "Bosporus",
                                "distance": 1093238,
                                "type": "ROUTING",
                                "class": "ENTRY"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  29.0339880931556,
                                  41.0434352606495
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601245875382,
                                "value": "Bosporus",
                                "distance": 1117387,
                                "type": "ROUTING",
                                "class": "EXIT"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  29.1346576541449,
                                  41.2266711349818
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601245946332,
                                "value": "11.0",
                                "distance": 1117752,
                                "type": "SPEED",
                                "class": "INCREASE"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  29.1367864299033,
                                  41.229541169674
                                ]
                              }
                            },
                            {
                              "type": "Feature",
                              "properties": {
                                "timestamp": 1601270325023,
                                "value": "",
                                "distance": 1255712,
                                "type": "VOYAGE",
                                "class": "EXIT"
                              },
                              "geometry": {
                                "type": "Point",
                                "coordinates": [
                                  30.102539062499996,
                                  42.21224516288584
                                ]
                              }
                            }
                          ],
                          "properties": null
                        }
                      },
                      "geometry": {
                        "type": "LineString",
                        "coordinates": [
                          [
                            20.456542968749996,
                            35.44277092585766
                          ],
                          [
                            20.567294025370614,
                            35.44445265727636
                          ],
                          [
                            20.64113003760525,
                            35.44552885777439
                          ],
                          [
                            20.714968024327447,
                            35.44656010449134
                          ],
                          [
                            20.788807820805374,
                            35.44754639169778
                          ],
                          [
                            20.86264942703903,
                            35.44848771939372
                          ],
                          [
                            20.936492678216155,
                            35.449384082348594
                          ],
                          [
                            21.010337574336745,
                            35.450235480562405
                          ],
                          [
                            21.084183950515467,
                            35.451041909303704
                          ],
                          [
                            21.15803180675232,
                            35.45180336857249
                          ],
                          [
                            21.23188097809617,
                            35.45251985413665
                          ],
                          [
                            21.305731464547023,
                            35.4531913659962
                          ],
                          [
                            21.379583101095307,
                            35.45381790041856
                          ],
                          [
                            21.453435887741023,
                            35.45439945740374
                          ],
                          [
                            21.527289659423417,
                            35.45493603371891
                          ],
                          [
                            21.60114441614249,
                            35.45542762936407
                          ],
                          [
                            21.674999992793687,
                            35.45587424160626
                          ],
                          [
                            21.74885638937701,
                            35.45627587044549
                          ],
                          [
                            21.822713440751503,
                            35.45663251364883
                          ],
                          [
                            21.896571146917168,
                            35.45694417121627
                          ],
                          [
                            22.06061448033291,
                            35.60366101503189
                          ],
                          [
                            22.31484344099872,
                            35.89678304509566
                          ],
                          [
                            22.548429589903268,
                            36.130710524746185
                          ],
                          [
                            22.761372927046537,
                            36.30544345398345
                          ],
                          [
                            22.88802451031429,
                            36.395180854670095
                          ],
                          [
                            22.928384339706515,
                            36.39992272680612
                          ],
                          [
                            23.00767008958634,
                            36.39811769654081
                          ],
                          [
                            23.12588175995376,
                            36.38976576387418
                          ],
                          [
                            23.213115696353103,
                            36.404542348155644
                          ],
                          [
                            23.269371898784367,
                            36.44244744938521
                          ],
                          [
                            23.315825,
                            36.477199999999996
                          ],
                          [
                            23.352475,
                            36.5088
                          ],
                          [
                            23.50241472200514,
                            36.70968403783454
                          ],
                          [
                            23.765644166015417,
                            37.079852113503634
                          ],
                          [
                            23.86876480244056,
                            37.34973194645537
                          ],
                          [
                            23.811776631280562,
                            37.51932353668977
                          ],
                          [
                            23.79562773306614,
                            37.608925670782675
                          ],
                          [
                            23.82031810779729,
                            37.618538348734106
                          ],
                          [
                            23.905801655459243,
                            37.607913744445625
                          ],
                          [
                            24.052078376051988,
                            37.57705185791723
                          ],
                          [
                            24.1578280596639,
                            37.60120456397144
                          ],
                          [
                            24.22305070629497,
                            37.680371862608254
                          ],
                          [
                            24.338282253249467,
                            37.76463533719658
                          ],
                          [
                            24.503522700527395,
                            37.853994987736435
                          ],
                          [
                            24.600773471127564,
                            37.92939625230343
                          ],
                          [
                            24.630034565049982,
                            37.99083913089757
                          ],
                          [
                            24.682384066984678,
                            38.07496964412141
                          ],
                          [
                            24.757821976931655,
                            38.18178779197495
                          ],
                          [
                            24.822407058698833,
                            38.275637624949866
                          ],
                          [
                            24.87613931228621,
                            38.35651914304617
                          ],
                          [
                            24.955810168015905,
                            38.473633478062595
                          ],
                          [
                            25.061419625887922,
                            38.62698062999917
                          ],
                          [
                            25.17639035168946,
                            38.80341653126405
                          ],
                          [
                            25.300722345420525,
                            39.00294118185725
                          ],
                          [
                            25.408156203091202,
                            39.17611828342137
                          ],
                          [
                            25.498691924701493,
                            39.32294783595639
                          ],
                          [
                            25.610770170733375,
                            39.49302889259282
                          ],
                          [
                            25.744390941186847,
                            39.686361453330655
                          ],
                          [
                            25.86235940866271,
                            39.830935365684496
                          ],
                          [
                            26.015833655410088,
                            39.97465826163929
                          ],
                          [
                            26.157323287819395,
                            40.0217614252063
                          ],
                          [
                            26.199307274268023,
                            40.021565167278226
                          ],
                          [
                            26.319661747722847,
                            40.052077464229
                          ],
                          [
                            26.393787350577412,
                            40.14048590508847
                          ],
                          [
                            26.400163746526488,
                            40.20017275643397
                          ],
                          [
                            26.514141824032237,
                            40.24338247717702
                          ],
                          [
                            26.659699834193823,
                            40.355686714626124
                          ],
                          [
                            26.688761321029762,
                            40.378787024834
                          ],
                          [
                            26.73866489607153,
                            40.41621452739962
                          ],
                          [
                            26.766556972666834,
                            40.43349696193346
                          ],
                          [
                            26.7890720758296,
                            40.44311016262408
                          ],
                          [
                            26.978654099368068,
                            40.50467647373592
                          ],
                          [
                            27.513627515239325,
                            40.674955606035525
                          ],
                          [
                            27.62464960870983,
                            40.71230729126768
                          ],
                          [
                            27.764305232787553,
                            40.7300170884201
                          ],
                          [
                            28.26343737795274,
                            40.78706248052844
                          ],
                          [
                            28.6943254825037,
                            40.83604118717278
                          ],
                          [
                            28.868203029773895,
                            40.86262634393299
                          ],
                          [
                            28.960448743806758,
                            40.930203463501684
                          ],
                          [
                            28.97873973557643,
                            40.938952543993956
                          ],
                          [
                            28.98749848521336,
                            40.94505803604754
                          ],
                          [
                            29.000615237748526,
                            40.97145843557254
                          ],
                          [
                            29.00042319000584,
                            40.99202368934875
                          ],
                          [
                            28.999390466664973,
                            41.005126060492294
                          ],
                          [
                            28.99648434438505,
                            41.02386792014673
                          ],
                          [
                            29.006530476618707,
                            41.029628089437466
                          ],
                          [
                            29.037521162203916,
                            41.04521187841192
                          ],
                          [
                            29.051725226433234,
                            41.06712033923978
                          ],
                          [
                            29.0525860788197,
                            41.07442153798064
                          ],
                          [
                            29.062701094254265,
                            41.08188414755196
                          ],
                          [
                            29.06313152044754,
                            41.09194110681554
                          ],
                          [
                            29.06534953421441,
                            41.10906590888564
                          ],
                          [
                            29.080141788377915,
                            41.117823379182376
                          ],
                          [
                            29.079474716535152,
                            41.12620067065061
                          ],
                          [
                            29.06657492996061,
                            41.14204073994273
                          ],
                          [
                            29.063448844169766,
                            41.153852040495586
                          ],
                          [
                            29.076981913517614,
                            41.17232153274702
                          ],
                          [
                            29.118339360527493,
                            41.20467066423515
                          ],
                          [
                            29.212647695650237,
                            41.331818012890395
                          ],
                          [
                            29.194431123515017,
                            41.36307659666625
                          ],
                          [
                            29.200592946758643,
                            41.38864811009189
                          ],
                          [
                            29.427619931504886,
                            41.6009402516468
                          ],
                          [
                            30.102539062499996,
                            42.21224516288584
                          ]
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "distance": 1255712,
                    "mode": "sea",
                    "departure": 1601046723023,
                    "arrival": 1601270325023,
                    "duration": 223602000,
                    "speed": 20.217,
                    "areas": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "properties": {
                            "id": 11128,
                            "name": "Bosporus",
                            "alternatives": []
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              29.06657492996061,
                              41.14204073994273
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "id": 11129,
                            "name": "Dardanelles Strait",
                            "alternatives": []
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              26.514141824032237,
                              40.24338247717702
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "id": 11118,
                            "name": "Elafonisou Strait",
                            "alternatives": []
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              23.002863506753243,
                              36.37679624749667
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "id": 11124,
                            "name": "West Khios",
                            "alternatives": []
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              25.327710916992686,
                              38.53500039849351
                            ]
                          }
                        }
                      ],
                      "properties": null
                    },
                    "details": [],
                    "secaIntersection": 0,
                    "hraIntersection": 0,
                    "intersectsIceArea": false,
                    "speedInKts": 10.916,
                    "vessel": {
                      "imo": 8677225,
                      "name": "KSL PRIDE",
                      "length": 83,
                      "width": 15,
                      "maxDraft": 4.2,
                      "draft": 4.2
                    },
                    "waypoints": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601046723023,
                            "value": "",
                            "distance": 0,
                            "type": "VOYAGE",
                            "class": "ENTRY"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              20.456542968749996,
                              35.44277092585766
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601094715483,
                            "value": "Elafonisou Strait",
                            "distance": 271584,
                            "type": "ROUTING",
                            "class": "ENTRY"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              22.9230188409349,
                              36.3992923349164
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601097593786,
                            "value": "Elafonisou Strait",
                            "distance": 287872,
                            "type": "ROUTING",
                            "class": "EXIT"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              23.1041204412648,
                              36.3913032522445
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601151746996,
                            "value": "West Khios",
                            "distance": 594319,
                            "type": "ROUTING",
                            "class": "ENTRY"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              24.9029794246363,
                              38.3959734940866
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601155930149,
                            "value": "West Khios",
                            "distance": 617991,
                            "type": "ROUTING",
                            "class": "EXIT"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              25.0316357418887,
                              38.583733804602
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601189790152,
                            "value": "Dardanelles Strait",
                            "distance": 809601,
                            "type": "ROUTING",
                            "class": "ENTRY"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              26.1777845307325,
                              40.0216657772824
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601189946366,
                            "value": "10",
                            "distance": 810485,
                            "type": "SPEED",
                            "class": "DECREASE"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              26.1881482325571,
                              40.0216173312243
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601202987229,
                            "value": "11.0",
                            "distance": 877573,
                            "type": "SPEED",
                            "class": "INCREASE"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              26.731158612656,
                              40.4105848417196
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601204100698,
                            "value": "Dardanelles Strait",
                            "distance": 883874,
                            "type": "ROUTING",
                            "class": "EXIT"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              26.7909450228584,
                              40.4437183977158
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601240266808,
                            "value": "10",
                            "distance": 1088534,
                            "type": "SPEED",
                            "class": "DECREASE"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              28.9976937465172,
                              41.0160683704915
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601241181192,
                            "value": "Bosporus",
                            "distance": 1093238,
                            "type": "ROUTING",
                            "class": "ENTRY"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              29.0339880931556,
                              41.0434352606495
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601245875382,
                            "value": "Bosporus",
                            "distance": 1117387,
                            "type": "ROUTING",
                            "class": "EXIT"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              29.1346576541449,
                              41.2266711349818
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601245946332,
                            "value": "11.0",
                            "distance": 1117752,
                            "type": "SPEED",
                            "class": "INCREASE"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              29.1367864299033,
                              41.229541169674
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "timestamp": 1601270325023,
                            "value": "",
                            "distance": 1255712,
                            "type": "VOYAGE",
                            "class": "EXIT"
                          },
                          "geometry": {
                            "type": "Point",
                            "coordinates": [
                              30.102539062499996,
                              42.21224516288584
                            ]
                          }
                        }
                      ],
                      "properties": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625224359918,
                  "status": 400,
                  "error": "Bad Request",
                  "errorCodes": [
                    "3190"
                  ],
                  "messages": [
                    "Coordinates must be given in longitude,latitude format and separated by ';'"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625224236593,
                  "status": 404,
                  "error": "Not Found",
                  "errorCodes": [
                    "1020"
                  ],
                  "messages": [
                    "We could not find a route between -118.564453125,33.7243396617476 and 6.5087890625,30.56226095049944 using sea with a 4.2m draft vessel with parameter allowIceAreas set to false."
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/vessel/v2/{imo}/eta": {
      "get": {
        "operationId": "getVesselEta",
        "tags": [
          "vessel"
        ],
        "summary": "Get vessel ETA by IMO number",
        "description": "Retrieve information from AIS and return general information about the vessel, its current speed (in km/h), its current draft (in m), its last position, its destination and an ETA predicted by our algorithms (Unix timestamp in ms).\n",
        "parameters": [
          {
            "name": "imo",
            "description": "The IMO number of the vessel.",
            "in": "path",
            "required": true,
            "schema": {
              "default": 9776418,
              "example": 9776418,
              "type": "integer"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\nhttps://api.searoutes.com/vessel/v2/9776418/eta \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "info": {
                    "imo": "9299628,",
                    "name": "CMA CGM OTELLO",
                    "length": 334,
                    "width": 42
                  },
                  "position": {
                    "type": "Feature",
                    "properties": {
                      "timestamp": 1570090275000,
                      "speed": 32.7804,
                      "draft": 13.2,
                      "cog": 150.8,
                      "heading": 152
                    },
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -72.61788,
                        40.508336666666665
                      ]
                    }
                  },
                  "to": {
                    "etaFromAIS": 1570104010748,
                    "etaFromPredictedRoute": 1570111202000,
                    "distance": 139959.16911608665,
                    "location": {
                      "type": "Feature",
                      "properties": {
                        "name": "New York",
                        "locode": "USNYC"
                      },
                      "geometry": {
                        "type": "Point",
                        "coordinates": [
                          -74.0896444102304,
                          40.6637868432737
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625230850501,
                  "status": 400,
                  "error": "Bad Request",
                  "errorCodes": [
                    "3140"
                  ],
                  "messages": [
                    "IMO number must be a 7-digits number"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1625231068973,
                  "status": 404,
                  "error": "Not Found",
                  "errorCodes": [
                    "1032"
                  ],
                  "messages": [
                    "Vessel with imo '1000002' not found."
                  ]
                }
              }
            }
          },
          "503": {
            "description": "AIS service unavailable.",
            "content": {
              "application/json": {
                "example": {
                  "timestamp": 1626167146557,
                  "status": 503,
                  "error": "Service Unavailable",
                  "errorCodes": [
                    "5020"
                  ],
                  "messages": [
                    "AIS service unavailable."
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/weather/v2/forecast": {
      "get": {
        "operationId": "getWeatherForecast",
        "tags": [
          "weather"
        ],
        "summary": "Get Forecasted weather at location",
        "description": "Get forecasted weather information in bulk, at a given location. By default we return weather information every 3 hours for your requested timeframe. If you do not specify a timeframe, we return the full 14 days forecast. The timestamp you pass in your request needs to be after today.\n\nAll values are expressed in the standard SI units (temperatures in Celcius degrees, humidity, cloud coverage and ice coverage in percentages, pressure in hectopascals, precipitation in millimeters, times in seconds, distances in meters, speeds in meters per second, salinity in PSU).\n",
        "parameters": [
          {
            "name": "latitude",
            "description": "Latitude\n",
            "in": "query",
            "required": true,
            "schema": {
              "example": 17.152,
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "description": "Longitude\n",
            "in": "query",
            "required": true,
            "schema": {
              "example": -80.564,
              "type": "number"
            }
          },
          {
            "name": "timestamp",
            "description": "Unix timestamp, in milliseconds\n",
            "in": "query",
            "required": true,
            "schema": {
              "example": 1590429600000,
              "type": "number"
            }
          },
          {
            "name": "timeframe",
            "description": "Time window, in milliseconds\n",
            "in": "query",
            "required": false,
            "schema": {
              "example": 21600000,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "latitude": 17.152,
                    "longitude": -80.564,
                    "timestamp": 1590429600000,
                    "weather": {
                      "latitude": 17,
                      "longitude": -80.5,
                      "timestamp": 1589230800000,
                      "air": {
                        "temperature": {
                          "value": 26.9,
                          "last3Hours": {
                            "max": 27.2,
                            "min": 27
                          },
                          "daily": {
                            "max": 27.3,
                            "min": 26.6
                          }
                        },
                        "humidity": 77.3,
                        "pressure": 1013.8
                      },
                      "precipitation": {
                        "last3Hours": {
                          "cumulative": 0,
                          "mean": 0
                        }
                      },
                      "wave": {
                        "height": 1.2,
                        "period": 0,
                        "length": 0,
                        "direction": 180,
                        "vector": {
                          "u": null,
                          "v": null
                        },
                        "speed": null
                      },
                      "water": {
                        "temperature": {
                          "value": 27.3,
                          "daily": {
                            "max": 27.3,
                            "min": 27.3
                          }
                        },
                        "salinity": 36.1
                      },
                      "current": {
                        "direction": 111.8,
                        "vector": {
                          "u": -0.5,
                          "v": 0.2
                        },
                        "speed": 0.5385
                      },
                      "wind": {
                        "direction": 95.6,
                        "vector": {
                          "u": -7.1,
                          "v": 0.7
                        },
                        "gust": 9.3,
                        "speed": 7.1344,
                        "beaufort": 5
                      },
                      "condition": {
                        "overall": "sun with clouds"
                      },
                      "cloudCoverage": 18.4,
                      "iceCoverage": 0,
                      "isLand": false
                    }
                  },
                  {
                    "latitude": 17.152,
                    "longitude": -80.564,
                    "timestamp": 1589232419000,
                    "weather": {
                      "latitude": 17,
                      "longitude": -80.5,
                      "timestamp": 1589241600000,
                      "air": {
                        "temperature": {
                          "value": 26.7,
                          "last3Hours": {
                            "max": 26.9,
                            "min": 26.7
                          },
                          "daily": {
                            "max": 27.3,
                            "min": 26.6
                          }
                        },
                        "humidity": 78.5,
                        "pressure": 1013
                      },
                      "precipitation": {
                        "last3Hours": {
                          "cumulative": 0.1,
                          "mean": 0.03
                        }
                      },
                      "wave": {
                        "height": 1.3,
                        "period": 0,
                        "length": 0,
                        "direction": 180,
                        "vector": {
                          "u": null,
                          "v": null
                        },
                        "speed": null
                      },
                      "water": {
                        "temperature": {
                          "value": 27.3,
                          "daily": {
                            "max": 27.3,
                            "min": 27.3
                          }
                        },
                        "salinity": 36.1
                      },
                      "current": {
                        "direction": 111.8,
                        "vector": {
                          "u": -0.5,
                          "v": 0.2
                        },
                        "speed": 0.5385
                      },
                      "wind": {
                        "direction": 95.6,
                        "vector": {
                          "u": -7.1,
                          "v": 0.7
                        },
                        "gust": 9.4,
                        "speed": 7.1344,
                        "beaufort": 5
                      },
                      "condition": {
                        "overall": "rain"
                      },
                      "cloudCoverage": 20.8,
                      "iceCoverage": 0,
                      "isLand": false
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "errors": {
                    "timeframe": {
                      "value": "1000000000",
                      "msg": "timerange must be less than two weeks",
                      "param": "timeframe",
                      "location": "query"
                    }
                  }
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X GET \\\n'https://api.searoutes.com/weather/v2/forecast?timestamp=1590429600000&latitude=17.152&longitude=-80.564&timeframe=21600000' \\\n-H 'x-api-key: <your-api-key-here>'\n"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/weather/v2/track": {
      "post": {
        "operationId": "postWeather",
        "tags": [
          "weather"
        ],
        "summary": "Get weather along a route",
        "description": "When using our [`/route/v2/`](#tag/SEA-Route) endpoint, users are returned suggested vessel routes, for a particular vessel and speed, through canals and straight. You can use our `weather/v2/track` endpoint to post the route you obtained from `/route/v2/`, in order to get the weather at each route point. This works both in the past, with historical values, or in the future, with forecasted values.\n\nAlternatively, you can form your own GeoJSON object, and post it to our `weather/v2/track` endpoint to obtain weather on your route. A minima, your FeatureCollection should contain at least one Feature, with the properties `departure` and `speed`, and the corresponding geometry. Below an example of such a minimal object:\n```json\n{\n  \"type\": \"FeatureCollection\",\n  \"properties\": {},\n  \"features\": [\n      {\n          \"type\": \"Feature\",\n          \"properties\": {\n              \"departure\": 1581166465000,\n              \"arrival\": 1581191106000,\n              \"duration\": 24641000,\n              \"speed\": 42.0\n          },\n          \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [[7.294921874999999,54.265224078605684],[3.076171875,54.13669645687002],[-1.318359375,57.9148477670092]]\n          }\n      }\n  ]\n}\n```\nNote that using our endpoint [`/route/v2/sea/<coords>/plan`](#operation/getPlanSeaRoute) yields the best results, since we cap the vessel speed in canals and straights where there are vessel speed restrictions.\n\nAll values are expressed in the standard SI units (temperatures in Celcius degrees, humidity, cloud coverage and ice coverage in percentages, pressure in hectopascals, precipitation in millimeters, times in seconds, distances in meters, speeds in meters per second, salinity in PSU).\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Feature",
                      "FeatureCollection",
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon",
                      "GeometryCollection"
                    ]
                  },
                  "bbox": {
                    "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            }
          },
          "description": "GeoJSON object to compute weather for"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "type": "FeatureCollection",
                    "features": [
                      {
                        "latitude": 54.265224,
                        "longitude": 7.294922,
                        "distance": 0,
                        "duration": 0,
                        "timestamp": 1581166465000,
                        "type": "Feature",
                        "properties": {},
                        "geometry": {
                          "type": "Point",
                          "coordinates": [
                            7.294922,
                            54.265224
                          ]
                        },
                        "direction": 268,
                        "weather": {
                          "latitude": 54.5,
                          "longitude": 7.5,
                          "timestamp": 1581174000000,
                          "air": {
                            "temperature": {
                              "value": 7.2,
                              "last3Hours": {
                                "max": 7.2,
                                "min": 6.3
                              },
                              "daily": {
                                "max": 7.3,
                                "min": 5
                              }
                            },
                            "humidity": 93.4,
                            "pressure": 1014.8
                          },
                          "precipitation": {
                            "last3Hours": {
                              "cumulative": 0.3,
                              "mean": 0
                            }
                          },
                          "wave": {
                            "height": 1,
                            "period": 6,
                            "length": 36,
                            "direction": 225.9,
                            "vector": {
                              "u": 4.3,
                              "v": 4.2
                            },
                            "speed": 6
                          },
                          "water": {
                            "temperature": {
                              "value": 6.4,
                              "daily": {
                                "max": 6.4,
                                "min": 6.2
                              }
                            },
                            "salinity": 33.3
                          },
                          "current": {
                            "direction": 180,
                            "vector": {
                              "u": 0,
                              "v": 0.1
                            },
                            "speed": 0.1
                          },
                          "wind": {
                            "direction": 204,
                            "vector": {
                              "u": 4.1,
                              "v": 9.2
                            },
                            "gust": 13.9,
                            "speed": 10.0722,
                            "beaufort": 7
                          },
                          "condition": {
                            "overall": "rain"
                          },
                          "cloudCoverage": 100,
                          "iceCoverage": 0,
                          "isLand": false
                        }
                      },
                      {
                        "latitude": 54.136696,
                        "longitude": 3.076172,
                        "distance": 274730,
                        "duration": 6541203,
                        "timestamp": 1581173006203,
                        "type": "Feature",
                        "properties": {},
                        "geometry": {
                          "type": "Point",
                          "coordinates": [
                            3.076172,
                            54.136696
                          ]
                        },
                        "direction": 328,
                        "weather": {
                          "latitude": 54,
                          "longitude": 3,
                          "timestamp": 1581174000000,
                          "air": {
                            "temperature": {
                              "value": 7,
                              "last3Hours": {
                                "max": 7.1,
                                "min": 7
                              },
                              "daily": {
                                "max": 8.4,
                                "min": 7
                              }
                            },
                            "humidity": 84.2,
                            "pressure": 1013.3
                          },
                          "precipitation": {
                            "last3Hours": {
                              "cumulative": 0,
                              "mean": 0
                            }
                          },
                          "wave": {
                            "height": 1,
                            "period": 6.2,
                            "length": 38.440000000000005,
                            "direction": 199.9,
                            "vector": {
                              "u": 2.1,
                              "v": 5.8
                            },
                            "speed": 6.2
                          },
                          "water": {
                            "temperature": {
                              "value": 6.5,
                              "daily": {
                                "max": 6.8,
                                "min": 6.5
                              }
                            },
                            "salinity": 34.4
                          },
                          "current": {
                            "direction": 180,
                            "vector": {
                              "u": 0,
                              "v": 0.1
                            },
                            "speed": 0.1
                          },
                          "wind": {
                            "direction": 224,
                            "vector": {
                              "u": 5.4,
                              "v": 5.6
                            },
                            "gust": 10.4,
                            "speed": 7.7795,
                            "beaufort": 5
                          },
                          "condition": {
                            "overall": "cloudy"
                          },
                          "cloudCoverage": 100,
                          "iceCoverage": 0,
                          "isLand": false
                        }
                      },
                      {
                        "latitude": 57.914848,
                        "longitude": -1.318359,
                        "distance": 775559,
                        "duration": 18465691,
                        "timestamp": 1581184930691,
                        "type": "Feature",
                        "properties": {},
                        "geometry": {
                          "type": "Point",
                          "coordinates": [
                            -1.318359,
                            57.914848
                          ]
                        },
                        "direction": 328,
                        "weather": {
                          "latitude": 58,
                          "longitude": -1.5,
                          "timestamp": 1581184800000,
                          "air": {
                            "temperature": {
                              "value": 7.9,
                              "last3Hours": {
                                "max": 7.9,
                                "min": 6.9
                              },
                              "daily": {
                                "max": 8.6,
                                "min": 6.9
                              }
                            },
                            "humidity": 74.3,
                            "pressure": 991
                          },
                          "precipitation": {
                            "last3Hours": {
                              "cumulative": 0.1,
                              "mean": 0
                            }
                          },
                          "wave": {
                            "height": 3,
                            "period": 8.5,
                            "length": 72.25,
                            "direction": 167.6,
                            "vector": {
                              "u": -1.8,
                              "v": 8.3
                            },
                            "speed": 8.5
                          },
                          "water": {
                            "temperature": {
                              "value": 7.4,
                              "daily": {
                                "max": 7.5,
                                "min": 7.2
                              }
                            },
                            "salinity": 35.1
                          },
                          "current": {
                            "direction": 270,
                            "vector": {
                              "u": 0.1,
                              "v": 0
                            },
                            "speed": 0.1
                          },
                          "wind": {
                            "direction": 178.8,
                            "vector": {
                              "u": -0.4,
                              "v": 18.7
                            },
                            "gust": 25.3,
                            "speed": 18.7043,
                            "beaufort": 10
                          },
                          "condition": {
                            "overall": "rain"
                          },
                          "cloudCoverage": 66,
                          "iceCoverage": 0,
                          "isLand": false
                        }
                      }
                    ],
                    "properties": {}
                  }
                ]
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "curl",
            "source": "curl -X POST \\\nhttp://api.searoutes.com/weather/v2/track \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"type\": \"FeatureCollection\",\n  \"properties\": {},\n  \"features\": [\n      {\n          \"type\": \"Feature\",\n          \"properties\": {\n              \"departure\": 1581166465000,\n              \"arrival\": 1581191106000,\n              \"duration\": 24641000,\n              \"speed\": 42.0\n          },\n          \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [[7.294921874999999,54.265224078605684],[3.076171875,54.13669645687002],[-1.318359375,57.9148477670092]]\n          }\n      }\n  ]\n}'\n"
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "Use your `x-api-key` to authenticate with our APIs. Note that your key is tied with a usage plan. You are therefore rate limited depending on your subscription. If you wish you increase your request calls, please [get in touch with us](/contact/)."
      }
    },
    "schemas": {
      "GeoJsonObject": {
        "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature",
              "FeatureCollection",
              "Point",
              "MultiPoint",
              "LineString",
              "MultiLineString",
              "Polygon",
              "MultiPolygon",
              "GeometryCollection"
            ]
          },
          "bbox": {
            "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type"
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Geometry": {
        "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3"
        },
        "allOf": [
          {
            "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Feature",
                  "FeatureCollection",
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              },
              "bbox": {
                "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            }
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              }
            },
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            }
          }
        ]
      },
      "GeometryElement": {
        "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Feature",
                      "FeatureCollection",
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon",
                      "GeometryCollection"
                    ]
                  },
                  "bbox": {
                    "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon",
                      "GeometryCollection"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon"
                ]
              }
            },
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            }
          }
        ]
      },
      "Feature": {
        "description": "GeoJSon 'Feature' object",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
        },
        "allOf": [
          {
            "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Feature",
                  "FeatureCollection",
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              },
              "bbox": {
                "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            }
          },
          {
            "type": "object",
            "required": [
              "geometry",
              "properties"
            ],
            "properties": {
              "geometry": {
                "allOf": [
                  {
                    "nullable": true
                  },
                  {
                    "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "allOf": [
                      {
                        "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                        "externalDocs": {
                          "url": "https://tools.ietf.org/html/rfc7946#section-3"
                        },
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Feature",
                              "FeatureCollection",
                              "Point",
                              "MultiPoint",
                              "LineString",
                              "MultiLineString",
                              "Polygon",
                              "MultiPolygon",
                              "GeometryCollection"
                            ]
                          },
                          "bbox": {
                            "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "discriminator": {
                          "propertyName": "type"
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Point",
                              "MultiPoint",
                              "LineString",
                              "MultiLineString",
                              "Polygon",
                              "MultiPolygon",
                              "GeometryCollection"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "discriminator": {
                          "propertyName": "type"
                        }
                      }
                    ]
                  }
                ]
              },
              "properties": {
                "type": "object",
                "nullable": true
              },
              "id": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      },
      "FeatureCollection": {
        "description": "GeoJSon 'FeatureCollection' object",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.3"
        },
        "allOf": [
          {
            "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Feature",
                  "FeatureCollection",
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              },
              "bbox": {
                "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            },
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            }
          },
          {
            "type": "object",
            "required": [
              "features"
            ],
            "properties": {
              "features": {
                "type": "array",
                "items": {
                  "description": "GeoJSon 'Feature' object",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
                  },
                  "allOf": [
                    {
                      "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                      "externalDocs": {
                        "url": "https://tools.ietf.org/html/rfc7946#section-3"
                      },
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feature",
                            "FeatureCollection",
                            "Point",
                            "MultiPoint",
                            "LineString",
                            "MultiLineString",
                            "Polygon",
                            "MultiPolygon",
                            "GeometryCollection"
                          ]
                        },
                        "bbox": {
                          "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": {
                        "propertyName": "type"
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geometry",
                        "properties"
                      ],
                      "properties": {
                        "geometry": {
                          "allOf": [
                            {
                              "nullable": true
                            },
                            {
                              "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                              "externalDocs": {
                                "url": "https://tools.ietf.org/html/rfc7946#section-3"
                              },
                              "allOf": [
                                {
                                  "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                                  "externalDocs": {
                                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Feature",
                                        "FeatureCollection",
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    },
                                    "bbox": {
                                      "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                                      "type": "array",
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "nullable": true
                        },
                        "id": {
                          "oneOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "Position": {
        "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
        },
        "type": "array",
        "minItems": 2,
        "maxItems": 3,
        "items": {
          "type": "number"
        }
      },
      "LineStringCoordinates": {
        "description": "GeoJSon fundamental geometry construct, array of two or more positions.\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.4"
        },
        "type": "array",
        "items": {
          "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
          "externalDocs": {
            "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
          },
          "type": "array",
          "minItems": 2,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        },
        "minItems": 2
      },
      "LinearRing": {
        "description": "A linear ring is a closed LineString with four or more positions.\nThe first and last positions are equivalent, and they MUST contain identical values; their representation SHOULD also be identical.\nA linear ring is the boundary of a surface or the boundary of a hole in a surface.\nA linear ring MUST follow the right-hand rule with respect to the area it bounds, i.e., exterior rings are counterclockwise, and holes are clockwise.\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
        },
        "type": "array",
        "items": {
          "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
          "externalDocs": {
            "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
          },
          "type": "array",
          "minItems": 2,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        },
        "minItems": 4
      },
      "Point": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.2"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "type",
              "coordinates"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point"
                ]
              },
              "coordinates": {
                "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                },
                "type": "array",
                "minItems": 2,
                "maxItems": 3,
                "items": {
                  "type": "number"
                }
              }
            }
          }
        ]
      },
      "MultiPoint": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.3"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coordinates"
            ],
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                  },
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 3,
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ]
      },
      "LineString": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.4"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coordinates"
            ],
            "properties": {
              "coordinates": {
                "description": "GeoJSon fundamental geometry construct, array of two or more positions.\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3.1.4"
                },
                "type": "array",
                "items": {
                  "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                  },
                  "type": "array",
                  "minItems": 2,
                  "maxItems": 3,
                  "items": {
                    "type": "number"
                  }
                },
                "minItems": 2
              }
            }
          }
        ]
      },
      "MultiLineString": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.5"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coordinates"
            ],
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "description": "GeoJSon fundamental geometry construct, array of two or more positions.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.1.4"
                  },
                  "type": "array",
                  "items": {
                    "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                    },
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 3,
                    "items": {
                      "type": "number"
                    }
                  },
                  "minItems": 2
                }
              }
            }
          }
        ]
      },
      "Polygon": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coordinates"
            ],
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "description": "A linear ring is a closed LineString with four or more positions.\nThe first and last positions are equivalent, and they MUST contain identical values; their representation SHOULD also be identical.\nA linear ring is the boundary of a surface or the boundary of a hole in a surface.\nA linear ring MUST follow the right-hand rule with respect to the area it bounds, i.e., exterior rings are counterclockwise, and holes are clockwise.\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
                  },
                  "type": "array",
                  "items": {
                    "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                    },
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 3,
                    "items": {
                      "type": "number"
                    }
                  },
                  "minItems": 4
                }
              }
            }
          }
        ]
      },
      "MultiPolygon": {
        "description": "GeoJSon geometry",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.7"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "allOf": [
                  {
                    "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Feature",
                          "FeatureCollection",
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      },
                      "bbox": {
                        "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point",
                          "MultiPoint",
                          "LineString",
                          "MultiLineString",
                          "Polygon",
                          "MultiPolygon",
                          "GeometryCollection"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coordinates"
            ],
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "description": "A linear ring is a closed LineString with four or more positions.\nThe first and last positions are equivalent, and they MUST contain identical values; their representation SHOULD also be identical.\nA linear ring is the boundary of a surface or the boundary of a hole in a surface.\nA linear ring MUST follow the right-hand rule with respect to the area it bounds, i.e., exterior rings are counterclockwise, and holes are clockwise.\n",
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
                    },
                    "type": "array",
                    "items": {
                      "description": "GeoJSon fundamental geometry construct.\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.\nImplementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as \"M\") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.\n",
                      "externalDocs": {
                        "url": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
                      },
                      "type": "array",
                      "minItems": 2,
                      "maxItems": 3,
                      "items": {
                        "type": "number"
                      }
                    },
                    "minItems": 4
                  }
                }
              }
            }
          }
        ]
      },
      "GeometryCollection": {
        "type": "object",
        "description": "GeoJSon geometry collection\nGeometryCollections composed of a single part or a number of parts of a single type SHOULD be avoided when that single part or a single object of multipart type (MultiPoint, MultiLineString, or MultiPolygon) could be used instead.\n",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.1.8"
        },
        "allOf": [
          {
            "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "allOf": [
              {
                "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                "externalDocs": {
                  "url": "https://tools.ietf.org/html/rfc7946#section-3"
                },
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Feature",
                      "FeatureCollection",
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon",
                      "GeometryCollection"
                    ]
                  },
                  "bbox": {
                    "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Point",
                      "MultiPoint",
                      "LineString",
                      "MultiLineString",
                      "Polygon",
                      "MultiPolygon",
                      "GeometryCollection"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "geometries"
            ],
            "properties": {
              "geometries": {
                "type": "array",
                "items": {
                  "description": "Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'\n",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                  },
                  "allOf": [
                    {
                      "description": "Abstract type for all GeoJSon object except Feature and FeatureCollection\n",
                      "externalDocs": {
                        "url": "https://tools.ietf.org/html/rfc7946#section-3"
                      },
                      "allOf": [
                        {
                          "description": "GeoJSon object\nThe coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.\n",
                          "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc7946#section-3"
                          },
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Feature",
                                "FeatureCollection",
                                "Point",
                                "MultiPoint",
                                "LineString",
                                "MultiLineString",
                                "Polygon",
                                "MultiPolygon",
                                "GeometryCollection"
                              ]
                            },
                            "bbox": {
                              "description": "A GeoJSON object MAY have a member named \"bbox\" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.\n",
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "discriminator": {
                            "propertyName": "type"
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Point",
                                "MultiPoint",
                                "LineString",
                                "MultiLineString",
                                "Polygon",
                                "MultiPolygon",
                                "GeometryCollection"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "discriminator": {
                            "propertyName": "type"
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Point",
                            "MultiPoint",
                            "LineString",
                            "MultiLineString",
                            "Polygon",
                            "MultiPolygon"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": {
                        "propertyName": "type"
                      }
                    }
                  ]
                },
                "minItems": 0
              }
            }
          }
        ]
      }
    }
  }
}